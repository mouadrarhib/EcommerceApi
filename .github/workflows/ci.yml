name: CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: ${{ secrets.DB_USERNAME }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: ${{ secrets.DB_NAME }}
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      # Add MailDev to match your docker-compose
      maildev:
        image: maildev/maildev
        ports:
          - 1080:1080
          - 1025:1025

    env:
      SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/${{ secrets.DB_NAME }}
      SPRING_DATASOURCE_USERNAME: ${{ secrets.DB_USERNAME }}
      SPRING_DATASOURCE_PASSWORD: ${{ secrets.DB_PASSWORD }}
      # Add MailDev config to match your docker-compose
      SPRING_MAIL_HOST: localhost
      SPRING_MAIL_PORT: 1025
      # Recommended for tests
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate

    steps:
      - name: ‚¨áÔ∏è Checkout code
        uses: actions/checkout@v4

      - name: ‚òï Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: üîç Validate POM
        run: mvn validate

      - name: üì¶ Build and test
        run: mvn clean package

      - name: üìÇ Upload JAR artifact
        if: success()  # Only upload if previous steps succeeded
        uses: actions/upload-artifact@v4
        with:
          name: ecommerce-api
          path: target/*.jar